'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _basic = require('./basic.js');

var _basic2 = _interopRequireDefault(_basic);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _defaults(obj, defaults) { var keys = Object.getOwnPropertyNames(defaults); for (var i = 0; i < keys.length; i++) { var key = keys[i]; var value = Object.getOwnPropertyDescriptor(defaults, key); if (value && value.configurable && obj[key] === undefined) { Object.defineProperty(obj, key, value); } } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass); }

var Loading = (_temp = _class = function (_React$Component) {
    _inherits(Loading, _React$Component);

    function Loading(props, context) {
        _classCallCheck(this, Loading);

        return _possibleConstructorReturn(this, _React$Component.call(this, props, context));
    }

    Loading.prototype.render = function render() {
        var _props = this.props,
            type = _props.type,
            show = _props.show;

        if (!show) return null;
        if (!type) return _react2['default'].createElement(_basic2['default'], this.props);
        switch (type.toLowerCase()) {
            case 'basic':
                return _react2['default'].createElement(_basic2['default'], this.props);
            case 'circle':
                return _react2['default'].createElement(CircleLoading, this.props);
            default:
                return _react2['default'].createElement(_basic2['default'], this.props);
        }
    };

    return Loading;
}(_react2['default'].Component), _class.propTypes = {
    prefix: _react.PropTypes.string,
    type: _react.PropTypes.string,
    size: _react.PropTypes.string,
    show: _react.PropTypes.bool,
    speend: _react.PropTypes.number,
    color: _react.PropTypes.string,
    opacity: _react.PropTypes.number
}, _class.defaultProps = {
    prefix: 'qn-loading',
    type: 'basic',
    size: 'medium',
    show: true,
    speend: 1.1,
    color: '#c7c7c7',
    opacity: 0.05
}, _temp);
Loading.displayName = 'Loading';
exports['default'] = Loading;
module.exports = exports['default'];